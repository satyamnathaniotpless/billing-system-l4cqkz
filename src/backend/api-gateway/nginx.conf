# NGINX Configuration for OTPless Internal Billing System API Gateway
# Version: 1.0
# NGINX Version: 1.20+

# Load required modules
load_module modules/ngx_http_headers_more_filter_module.so;
load_module modules/ngx_http_waf_module.so;

# Process and file handling configuration
user nginx;
worker_processes auto;
worker_rlimit_nofile 65535;
pid /var/run/nginx.pid;

# Error logging configuration
error_log /var/log/nginx/error.log warn;

# Events configuration for high performance
events {
    worker_connections 65535;
    multi_accept on;
    use epoll;
}

# HTTP server configuration
http {
    # Basic settings
    include mime.types;
    default_type application/json;
    server_tokens off;

    # Optimized buffer settings
    client_body_buffer_size 16k;
    client_max_body_size 10m;
    client_header_buffer_size 1k;
    large_client_header_buffers 4 8k;
    output_buffers 1 32k;
    postpone_output 1460;

    # Timeouts
    client_body_timeout 12;
    client_header_timeout 12;
    keepalive_timeout 15;
    send_timeout 10;
    keepalive_requests 100;

    # Include security headers and rate limiting configurations
    include security-headers.conf;
    include rate-limiting.conf;

    # Logging configuration
    log_format json_combined escape=json
        '{'
        '"time_local":"$time_local",'
        '"remote_addr":"$remote_addr",'
        '"remote_user":"$remote_user",'
        '"request":"$request",'
        '"status": "$status",'
        '"body_bytes_sent":"$body_bytes_sent",'
        '"request_time":"$request_time",'
        '"http_referrer":"$http_referer",'
        '"http_user_agent":"$http_user_agent",'
        '"request_id":"$request_id",'
        '"upstream_addr":"$upstream_addr",'
        '"upstream_response_time":"$upstream_response_time"'
        '}';

    access_log /var/log/nginx/access.log json_combined buffer=32k flush=5s;

    # Upstream definitions with health checks
    upstream billing_service {
        least_conn;
        server billing-service:8080 max_fails=3 fail_timeout=30s;
        keepalive 32;
        health_check interval=5s rises=2 falls=3;
    }

    upstream event_processor {
        least_conn;
        server event-processor:3000 max_fails=3 fail_timeout=30s;
        keepalive 32;
        health_check interval=5s rises=2 falls=3;
    }

    upstream wallet_service {
        least_conn;
        server wallet-service:8081 max_fails=3 fail_timeout=30s;
        keepalive 32;
        health_check interval=5s rises=2 falls=3;
    }

    upstream invoice_service {
        least_conn;
        server invoice-service:8082 max_fails=3 fail_timeout=30s;
        keepalive 32;
        health_check interval=5s rises=2 falls=3;
    }

    # Main server configuration
    server {
        listen 80;
        listen [::]:80;
        server_name api.otpless.com;
        return 301 https://$server_name$request_uri;
    }

    server {
        listen 443 ssl http2;
        listen [::]:443 ssl http2;
        server_name api.otpless.com;

        # SSL configuration
        ssl_certificate /etc/nginx/ssl/tls.crt;
        ssl_certificate_key /etc/nginx/ssl/tls.key;
        ssl_protocols TLSv1.3;
        ssl_prefer_server_ciphers on;
        ssl_ciphers ECDHE-ECDSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-GCM-SHA384;
        ssl_session_cache shared:SSL:50m;
        ssl_session_timeout 1d;
        ssl_session_tickets off;
        ssl_buffer_size 4k;

        # OCSP Stapling
        ssl_stapling on;
        ssl_stapling_verify on;
        ssl_trusted_certificate /etc/nginx/ssl/ca.crt;
        resolver 8.8.8.8 8.8.4.4 valid=300s;
        resolver_timeout 5s;

        # Request ID generation
        add_header X-Request-ID $request_id always;

        # Common proxy settings
        proxy_http_version 1.1;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_set_header X-Request-ID $request_id;
        proxy_set_header Connection "";

        # API Endpoints
        location /api/v1/billing {
            proxy_pass http://billing_service;
            client_max_body_size 1m;
            limit_req zone=apikey_rate burst=1000 nodelay;
            proxy_next_upstream error timeout http_500 http_502 http_503 http_504;
            proxy_next_upstream_tries 3;
        }

        location /api/v1/events {
            proxy_pass http://event_processor;
            client_max_body_size 5m;
            limit_req zone=apikey_rate burst=2000 nodelay;
            proxy_next_upstream error timeout http_500 http_502 http_503 http_504;
            proxy_next_upstream_tries 3;
        }

        location /api/v1/wallets {
            proxy_pass http://wallet_service;
            client_max_body_size 1m;
            limit_req zone=apikey_rate burst=500 nodelay;
            proxy_next_upstream error timeout http_500 http_502 http_503 http_504;
            proxy_next_upstream_tries 3;
        }

        location /api/v1/invoices {
            proxy_pass http://invoice_service;
            client_max_body_size 10m;
            limit_req zone=apikey_rate burst=100 nodelay;
            proxy_next_upstream error timeout http_500 http_502 http_503 http_504;
            proxy_next_upstream_tries 3;
        }

        # Prometheus metrics endpoint
        location /metrics {
            allow 10.0.0.0/8;
            deny all;
            stub_status on;
            access_log off;
        }

        # Health check endpoint
        location /health {
            access_log off;
            add_header Content-Type application/json;
            return 200 '{"status":"UP"}';
        }

        # Error pages
        error_page 400 401 403 404 /4xx.json;
        location /4xx.json {
            internal;
            return 404 '{"error":"Not Found","status":404,"message":"The requested resource was not found"}';
        }

        error_page 500 502 503 504 /5xx.json;
        location /5xx.json {
            internal;
            return 500 '{"error":"Internal Server Error","status":500,"message":"An internal server error occurred"}';
        }
    }
}