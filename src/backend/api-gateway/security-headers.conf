# NGINX Security Headers Configuration
# Version: 1.0
# Purpose: Implements comprehensive security headers for OTPless Internal Billing System API Gateway
# NGINX Version: 1.20+

# Security Headers Block
# Applies strict security policies and controls for all responses
add_header X-Frame-Options "DENY" always;
add_header X-Content-Type-Options "nosniff" always;
add_header X-XSS-Protection "1; mode=block" always;

# Content Security Policy (CSP)
# Implements strict resource loading rules and API endpoint allowances
add_header Content-Security-Policy "default-src 'self'; \
    script-src 'self' 'unsafe-inline'; \
    connect-src 'self' api.otpless.com; \
    worker-src 'none'; \
    object-src 'none'; \
    base-uri 'none'; \
    img-src 'self' data:; \
    style-src 'self' 'unsafe-inline'; \
    font-src 'self'; \
    frame-ancestors 'none'" always;

# HTTP Strict Transport Security (HSTS)
# Enforces HTTPS with preloading and subdomain inclusion
add_header Strict-Transport-Security "max-age=31536000; includeSubDomains; preload" always;

# Referrer Policy
# Controls referrer information exposure
add_header Referrer-Policy "strict-origin-when-cross-origin" always;

# Permissions Policy
# Restricts access to browser features
add_header Permissions-Policy "geolocation=(), \
    microphone=(), \
    camera=(), \
    payment=(), \
    usb=(), \
    bluetooth=(), \
    magnetometer=()" always;

# Cache Control
# Prevents sensitive data caching
add_header Cache-Control "no-store, no-cache, must-revalidate, proxy-revalidate" always;
add_header Pragma "no-cache" always;
add_header Expires "0" always;

# Cross-Origin Policies
# Implements strict cross-origin controls
add_header Cross-Origin-Resource-Policy "same-origin" always;
add_header Cross-Origin-Embedder-Policy "require-corp" always;
add_header Cross-Origin-Opener-Policy "same-origin" always;

# Ensure headers are added to error responses as well
proxy_hide_header X-Powered-By;
proxy_hide_header Server;

# Additional security measures
more_clear_headers "X-Powered-By";
more_clear_headers "Server";

# Enable security headers for all response codes
map $status $always_add_headers {
    default 1;
}