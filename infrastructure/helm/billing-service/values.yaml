# Chart information
chartInfo:
  version: "1.0.0"
  appVersion: "1.0.0"
  description: "Helm chart for OTPless Billing Service"

# Deployment configuration
replicaCount: 3

# Container image configuration
image:
  repository: otpless/billing-service
  tag: latest
  pullPolicy: Always
  digest: sha256:abc123

# Pod annotations for monitoring, logging, and secrets
podAnnotations:
  prometheus.io/scrape: "true"
  prometheus.io/port: "8081"
  prometheus.io/path: "/actuator/prometheus"
  fluentbit.io/parser: "spring-boot"
  vault.hashicorp.com/agent-inject: "true"
  vault.hashicorp.com/role: "billing-service"
  cluster-autoscaler.kubernetes.io/safe-to-evict: "true"

# Resource allocation for high throughput
resources:
  requests:
    cpu: "2"
    memory: "4Gi"
  limits:
    cpu: "4"
    memory: "8Gi"

# Advanced horizontal pod autoscaling
autoscaling:
  enabled: true
  minReplicas: 3
  maxReplicas: 15
  targetCPUUtilizationPercentage: 70
  targetMemoryUtilizationPercentage: 75
  behavior:
    scaleUp:
      stabilizationWindowSeconds: 60
      policies:
      - type: Pods
        value: 2
        periodSeconds: 30
    scaleDown:
      stabilizationWindowSeconds: 300
      policies:
      - type: Pods
        value: 1
        periodSeconds: 60

# Environment variables and JVM optimization
env:
  SPRING_PROFILES_ACTIVE: "prod"
  JAVA_OPTS: "-XX:+UseG1GC -XX:MaxGCPauseMillis=50 -XX:+UseStringDeduplication -XX:+HeapDumpOnOutOfMemoryError -XX:HeapDumpPath=/dumps -Xms3g -Xmx6g -Dspring.config.location=file:/config/application.yaml"
  TZ: "UTC"
  SPRING_CLOUD_KUBERNETES_ENABLED: "true"
  MANAGEMENT_METRICS_EXPORT_PROMETHEUS_ENABLED: "true"
  SPRING_MAIN_BANNER_MODE: "off"
  SERVER_TOMCAT_THREADS_MAX: "400"
  SERVER_TOMCAT_MAX_CONNECTIONS: "10000"
  SPRING_DATASOURCE_HIKARI_MAXIMUM_POOL_SIZE: "50"

# Enhanced liveness probe
livenessProbe:
  httpGet:
    path: /actuator/health/liveness
    port: 8081
  initialDelaySeconds: 90
  periodSeconds: 15
  timeoutSeconds: 5
  failureThreshold: 3
  successThreshold: 1

# Enhanced readiness probe
readinessProbe:
  httpGet:
    path: /actuator/health/readiness
    port: 8081
  initialDelaySeconds: 45
  periodSeconds: 10
  timeoutSeconds: 3
  failureThreshold: 3
  successThreshold: 1

# Pod disruption budget for high availability
podDisruptionBudget:
  enabled: true
  minAvailable: 2

# Enhanced security context
securityContext:
  runAsUser: 1000
  runAsGroup: 1000
  fsGroup: 1000
  runAsNonRoot: true
  readOnlyRootFilesystem: true
  allowPrivilegeEscalation: false
  capabilities:
    drop:
    - ALL

# Pod security context
podSecurityContext:
  runAsUser: 1000
  runAsGroup: 1000
  fsGroup: 1000

# Service configuration
service:
  type: ClusterIP
  port: 8080
  targetPort: 8080
  metricsPort: 8081

# Pod topology spread constraints for high availability
topologySpreadConstraints:
  - maxSkew: 1
    topologyKey: topology.kubernetes.io/zone
    whenUnsatisfiable: DoNotSchedule
    labelSelector:
      matchLabels:
        app: billing-service

# Pod affinity rules
affinity:
  podAntiAffinity:
    preferredDuringSchedulingIgnoredDuringExecution:
    - weight: 100
      podAffinityTerm:
        labelSelector:
          matchExpressions:
          - key: app
            operator: In
            values:
            - billing-service
        topologyKey: kubernetes.io/hostname

# Node selector for production workloads
nodeSelector:
  purpose: app
  environment: production

# Tolerations for node taints
tolerations:
  - key: "purpose"
    operator: "Equal"
    value: "app"
    effect: "NoSchedule"

# Volume mounts for configuration and dumps
volumeMounts:
  - name: config-volume
    mountPath: /config
    readOnly: true
  - name: tmp-volume
    mountPath: /tmp
  - name: dumps
    mountPath: /dumps

# Volumes configuration
volumes:
  - name: config-volume
    configMap:
      name: billing-service-config
  - name: tmp-volume
    emptyDir: {}
  - name: dumps
    emptyDir: {}

# Ingress configuration
ingress:
  enabled: false

# Network policy
networkPolicy:
  enabled: true
  ingressRules:
    - from:
        - podSelector:
            matchLabels:
              app: api-gateway
        - podSelector:
            matchLabels:
              app: event-processor
      ports:
        - port: 8080
          protocol: TCP