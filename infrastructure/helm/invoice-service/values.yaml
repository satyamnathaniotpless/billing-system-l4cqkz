# OTPless Invoice Service Helm Values
# Version: 1.0.0
# Maintainer: OTPless DevOps Team

# Core service configuration
nameOverride: "invoice-service"
fullnameOverride: "invoice-service"

# Image configuration with security hardening
image:
  repository: otpless/invoice-service
  tag: latest
  pullPolicy: Always
  securityContext:
    runAsNonRoot: true
    readOnlyRootFilesystem: true
    allowPrivilegeEscalation: false
    capabilities:
      drop:
        - ALL

# High availability configuration
replicaCount: 3
updateStrategy:
  type: RollingUpdate
  rollingUpdate:
    maxSurge: 1
    maxUnavailable: 0

# Resource allocation as per container strategy
resources:
  requests:
    cpu: "500m"
    memory: "1Gi"
  limits:
    cpu: "1"
    memory: "2Gi"

# Pod disruption budget for availability
podDisruptionBudget:
  enabled: true
  minAvailable: 2

# Service configuration
service:
  type: ClusterIP
  port: 8000
  targetPort: 8000

# Ingress configuration with TLS and security headers
ingress:
  enabled: true
  annotations:
    kubernetes.io/ingress.class: nginx
    cert-manager.io/cluster-issuer: letsencrypt-prod
    nginx.ingress.kubernetes.io/ssl-redirect: "true"
    nginx.ingress.kubernetes.io/proxy-body-size: "8m"
    nginx.ingress.kubernetes.io/enable-cors: "true"
    nginx.ingress.kubernetes.io/cors-allow-methods: "GET, POST, PUT, DELETE, OPTIONS"
    nginx.ingress.kubernetes.io/cors-allow-credentials: "true"
    nginx.ingress.kubernetes.io/configuration-snippet: |
      more_set_headers "X-Frame-Options: DENY";
      more_set_headers "X-Content-Type-Options: nosniff";
      more_set_headers "X-XSS-Protection: 1; mode=block";
  hosts:
    - host: invoice.otpless.com
      paths:
        - path: /
          pathType: Prefix
  tls:
    - hosts:
        - invoice.otpless.com
      secretName: invoice-tls

# Pod security context
podSecurityContext:
  runAsUser: 1000
  runAsNonRoot: true
  fsGroup: 1000
  seccompProfile:
    type: RuntimeDefault

# Service account configuration with IAM role
serviceAccount:
  create: true
  annotations:
    eks.amazonaws.com/role-arn: arn:aws:iam::${AWS_ACCOUNT_ID}:role/invoice-service-role
  automountServiceAccountToken: true

# Pod annotations for monitoring and security
podAnnotations:
  prometheus.io/scrape: "true"
  prometheus.io/port: "8000"
  prometheus.io/path: "/metrics"
  vault.hashicorp.com/agent-inject: "true"
  vault.hashicorp.com/role: "invoice-service"
  security.otpless.com/scanned: "true"

# Health check probes
probes:
  liveness:
    httpGet:
      path: /health
      port: 8000
    initialDelaySeconds: 30
    periodSeconds: 10
    timeoutSeconds: 5
    failureThreshold: 3
  readiness:
    httpGet:
      path: /health
      port: 8000
    initialDelaySeconds: 5
    periodSeconds: 5
    timeoutSeconds: 3
    failureThreshold: 2
  startup:
    httpGet:
      path: /health
      port: 8000
    initialDelaySeconds: 10
    periodSeconds: 5
    failureThreshold: 30

# Autoscaling configuration
autoscaling:
  enabled: true
  minReplicas: 3
  maxReplicas: 10
  targetCPUUtilizationPercentage: 80
  targetMemoryUtilizationPercentage: 80
  behavior:
    scaleDown:
      stabilizationWindowSeconds: 300
      policies:
        - type: Pods
          value: 1
          periodSeconds: 60

# Network policies for secure communication
networkPolicy:
  enabled: true
  ingressRules:
    - from:
        - namespaceSelector:
            matchLabels:
              name: otpless-billing
        - podSelector:
            matchLabels:
              app.kubernetes.io/name: billing-service
      ports:
        - port: 8000
          protocol: TCP
  egressRules:
    - to:
        - namespaceSelector:
            matchLabels:
              name: otpless-database
        - namespaceSelector:
            matchLabels:
              name: otpless-monitoring

# Affinity and anti-affinity rules
affinity:
  podAntiAffinity:
    preferredDuringSchedulingIgnoredDuringExecution:
      - weight: 100
        podAffinityTerm:
          labelSelector:
            matchExpressions:
              - key: app.kubernetes.io/name
                operator: In
                values:
                  - invoice-service
          topologyKey: kubernetes.io/hostname

# Node selector for production workloads
nodeSelector:
  type: application
  environment: production

# Tolerations for node placement
tolerations:
  - key: "type"
    operator: "Equal"
    value: "application"
    effect: "NoSchedule"

# Volume configuration for temporary storage
volumes:
  - name: tmp
    emptyDir: {}
  - name: cache
    emptyDir: {}

# Volume mounts configuration
volumeMounts:
  - name: tmp
    mountPath: /tmp
  - name: cache
    mountPath: /app/cache