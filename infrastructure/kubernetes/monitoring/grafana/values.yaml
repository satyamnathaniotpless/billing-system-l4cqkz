# Grafana Helm Chart Values v6.x
# Purpose: Configuration for Grafana deployment in OTPless Internal Billing System

# Deployment configuration
replicas: 2
image:
  repository: grafana/grafana
  tag: "9.5.2"  # Latest stable 9.5.x version
  pullPolicy: IfNotPresent

# Persistence configuration
persistence:
  enabled: true
  size: 10Gi
  storageClass: gp2
  accessModes:
    - ReadWriteOnce

# Resource allocation
resources:
  limits:
    cpu: 500m
    memory: 1Gi
  requests:
    cpu: 250m
    memory: 512Mi

# Security context
securityContext:
  runAsUser: 472
  runAsGroup: 472
  fsGroup: 472
  runAsNonRoot: true

# Admin credentials (password should be provided via secrets)
adminUser: admin
adminPassword: "${GRAFANA_ADMIN_PASSWORD}"

# Data sources configuration
datasources:
  datasources.yaml:
    apiVersion: 1
    datasources:
      - name: Prometheus
        type: prometheus
        url: http://prometheus-server.monitoring.svc.cluster.local:9090
        access: proxy
        isDefault: true
        jsonData:
          timeInterval: "15s"
          queryTimeout: "30s"
          exemplarTraceIdDestinations:
            - name: trace_id
              datasourceUid: tempo
      - name: Loki
        type: loki
        url: http://loki.monitoring.svc.cluster.local:3100
        access: proxy
        jsonData:
          maxLines: 1000
          timeout: 30
      - name: Tempo
        type: tempo
        url: http://tempo.monitoring.svc.cluster.local:3200
        access: proxy
        jsonData:
          nodeGraph:
            enabled: true
          tracesToLogs:
            datasourceUid: loki

# Dashboard providers configuration
dashboardProviders:
  dashboardproviders.yaml:
    apiVersion: 1
    providers:
      - name: default
        orgId: 1
        folder: ""
        type: file
        disableDeletion: false
        editable: true
        options:
          path: /var/lib/grafana/dashboards

# Predefined dashboards
dashboards:
  default:
    api-gateway:
      json:
        title: "API Gateway Metrics"
        uid: api-gateway
        panels:
          - title: "Request Rate"
            type: "graph"
            datasource: "Prometheus"
            targets:
              - expr: 'sum(rate(http_requests_total[5m])) by (status_code)'
          - title: "Latency Distribution"
            type: "graph"
            datasource: "Prometheus"
            targets:
              - expr: 'histogram_quantile(0.95, sum(rate(http_request_duration_seconds_bucket[5m])) by (le))'
          - title: "Error Rate"
            type: "graph"
            datasource: "Prometheus"
            targets:
              - expr: 'sum(rate(http_requests_total{status_code=~"5.*"}[5m])) / sum(rate(http_requests_total[5m])) * 100'

    billing-service:
      json:
        title: "Billing Service Metrics"
        uid: billing-service
        panels:
          - title: "Invoice Generation Rate"
            type: "graph"
            datasource: "Prometheus"
            targets:
              - expr: 'rate(billing_invoices_generated_total[5m])'
          - title: "Billing Processing Time"
            type: "graph"
            datasource: "Prometheus"
            targets:
              - expr: 'histogram_quantile(0.95, sum(rate(billing_processing_duration_seconds_bucket[5m])) by (le))'

    event-processor:
      json:
        title: "Event Processor Metrics"
        uid: event-processor
        panels:
          - title: "Events Per Second"
            type: "graph"
            datasource: "Prometheus"
            targets:
              - expr: 'sum(rate(events_processed_total[1m]))'
          - title: "Event Processing Latency"
            type: "graph"
            datasource: "Prometheus"
            targets:
              - expr: 'histogram_quantile(0.95, sum(rate(event_processing_duration_seconds_bucket[5m])) by (le))'

    security-metrics:
      json:
        title: "Security Monitoring"
        uid: security-metrics
        panels:
          - title: "Authentication Failures"
            type: "graph"
            datasource: "Prometheus"
            targets:
              - expr: 'sum(rate(authentication_failures_total[5m])) by (reason)'
          - title: "Suspicious Access Patterns"
            type: "graph"
            datasource: "Loki"
            targets:
              - expr: 'sum(count_over_time({component="api-gateway"} |~ "suspicious_activity"[5m])) by (ip_address)'

# Service configuration
service:
  type: ClusterIP
  port: 3000

# Ingress configuration
ingress:
  enabled: true
  annotations:
    kubernetes.io/ingress.class: nginx
    cert-manager.io/cluster-issuer: letsencrypt-prod
    nginx.ingress.kubernetes.io/ssl-redirect: "true"
    nginx.ingress.kubernetes.io/backend-protocol: "HTTPS"
  hosts:
    - grafana.otpless-billing.internal
  tls:
    - secretName: grafana-tls
      hosts:
        - grafana.otpless-billing.internal

# Monitoring configuration
serviceMonitor:
  enabled: true
  interval: 15s
  scrapeTimeout: 14s

# Additional configurations
env:
  GF_AUTH_DISABLE_LOGIN_FORM: "false"
  GF_AUTH_ANONYMOUS_ENABLED: "false"
  GF_SECURITY_ALLOW_EMBEDDING: "false"
  GF_SECURITY_COOKIE_SECURE: "true"
  GF_SECURITY_COOKIE_SAMESITE: "strict"

# Sidecar configurations
sidecar:
  dashboards:
    enabled: true
    searchNamespace: ALL
  datasources:
    enabled: true
    searchNamespace: ALL