---
# Cert Manager Custom Resource Definitions
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    cert-manager.io/inject-ca-from-secret: "cert-manager/cert-manager-webhook-ca"
  name: certificates.cert-manager.io
spec:
  group: cert-manager.io
  names:
    kind: Certificate
    plural: certificates
    shortNames:
      - cert
      - certs
  scope: Namespaced
  versions:
    - name: v1
      served: true
      storage: true

---
# Cert Manager Deployment
apiVersion: apps/v1
kind: Deployment
metadata:
  name: cert-manager
  namespace: otpless-system
  labels:
    app.kubernetes.io/name: cert-manager
    app.kubernetes.io/instance: otpless
    app.kubernetes.io/version: v1.12.0
    app.kubernetes.io/component: controller
spec:
  replicas: 3
  selector:
    matchLabels:
      app.kubernetes.io/name: cert-manager
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 0
  template:
    metadata:
      labels:
        app.kubernetes.io/name: cert-manager
      annotations:
        prometheus.io/scrape: "true"
        prometheus.io/port: "9402"
    spec:
      securityContext:
        runAsNonRoot: true
        seccompProfile:
          type: RuntimeDefault
      serviceAccountName: cert-manager
      affinity:
        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
            - weight: 100
              podAffinityTerm:
                labelSelector:
                  matchExpressions:
                    - key: app.kubernetes.io/name
                      operator: In
                      values:
                        - cert-manager
                topologyKey: kubernetes.io/hostname
      containers:
        - name: cert-manager
          image: quay.io/jetstack/cert-manager-controller:v1.12.0
          imagePullPolicy: IfNotPresent
          args:
            - --v=2
            - --cluster-resource-namespace=$(POD_NAMESPACE)
            - --leader-election-namespace=otpless-system
            - --acme-http01-solver-image=quay.io/jetstack/cert-manager-acmesolver:v1.12.0
          env:
            - name: POD_NAMESPACE
              valueFrom:
                fieldRef:
                  fieldPath: metadata.namespace
          ports:
            - containerPort: 9402
              name: metrics
              protocol: TCP
          resources:
            limits:
              cpu: 500m
              memory: 512Mi
            requests:
              cpu: 250m
              memory: 256Mi
          securityContext:
            allowPrivilegeEscalation: false
            capabilities:
              drop:
                - ALL
            readOnlyRootFilesystem: true

---
# Production ClusterIssuer
apiVersion: cert-manager.io/v1
kind: ClusterIssuer
metadata:
  name: letsencrypt-prod
  namespace: otpless-system
  labels:
    app.kubernetes.io/name: cert-manager
    app.kubernetes.io/instance: otpless
    app.kubernetes.io/version: v1.12.0
  annotations:
    cert-manager.io/min-tls-version: TLSv1.3
    cert-manager.io/preferred-chain: "ISRG Root X1"
spec:
  acme:
    server: https://acme-v02.api.letsencrypt.org/directory
    email: devops@otpless.com
    privateKeySecretRef:
      name: letsencrypt-prod-key
    solvers:
      - http01:
          ingress:
            class: nginx
            podTemplate:
              spec:
                securityContext:
                  runAsNonRoot: true
                  seccompProfile:
                    type: RuntimeDefault
                  capabilities:
                    drop:
                      - ALL
                  readOnlyRootFilesystem: true

---
# Staging ClusterIssuer for testing
apiVersion: cert-manager.io/v1
kind: ClusterIssuer
metadata:
  name: letsencrypt-staging
  namespace: otpless-system
  labels:
    app.kubernetes.io/name: cert-manager
    app.kubernetes.io/instance: otpless
    app.kubernetes.io/version: v1.12.0
  annotations:
    cert-manager.io/min-tls-version: TLSv1.3
    cert-manager.io/preferred-chain: "ISRG Root X1"
spec:
  acme:
    server: https://acme-staging-v02.api.letsencrypt.org/directory
    email: devops@otpless.com
    privateKeySecretRef:
      name: letsencrypt-staging-key
    solvers:
      - http01:
          ingress:
            class: nginx
            podTemplate:
              spec:
                securityContext:
                  runAsNonRoot: true
                  seccompProfile:
                    type: RuntimeDefault
                  capabilities:
                    drop:
                      - ALL
                  readOnlyRootFilesystem: true

---
# Network Policy for cert-manager
apiVersion: networking.k8s.io/v1
kind: NetworkPolicy
metadata:
  name: cert-manager-network-policy
  namespace: otpless-system
spec:
  podSelector:
    matchLabels:
      app.kubernetes.io/name: cert-manager
  policyTypes:
    - Ingress
    - Egress
  ingress:
    - from:
        - namespaceSelector:
            matchLabels:
              name: otpless-system
        - podSelector:
            matchLabels:
              app.kubernetes.io/name: ingress-nginx-controller
    - ports:
        - port: 9402
          protocol: TCP
  egress:
    - to:
        - ipBlock:
            cidr: 0.0.0.0/0
            except:
              - 169.254.0.0/16
              - 172.16.0.0/12
              - 192.168.0.0/16
    - ports:
        - port: 443
          protocol: TCP

---
# Monitoring configuration for cert-manager
apiVersion: monitoring.coreos.com/v1
kind: ServiceMonitor
metadata:
  name: cert-manager
  namespace: otpless-system
  labels:
    app.kubernetes.io/name: cert-manager
    release: prometheus
spec:
  selector:
    matchLabels:
      app.kubernetes.io/name: cert-manager
  endpoints:
    - port: metrics
      interval: 30s