---
# ServiceAccount for ExternalDNS with IRSA integration
apiVersion: v1
kind: ServiceAccount
metadata:
  name: external-dns
  namespace: otpless-system
  labels:
    app.kubernetes.io/name: external-dns
    app.kubernetes.io/part-of: otpless
    app.kubernetes.io/managed-by: kustomize
    app.kubernetes.io/version: "6.20.0"
  annotations:
    eks.amazonaws.com/role-arn: arn:aws:iam::${AWS_ACCOUNT}:role/external-dns
    iam.amazonaws.com/permitted-annotation-values: "*"
    security.otpless.com/compliance-level: "high"

---
# ClusterRole with minimal required permissions
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: external-dns
  labels:
    app.kubernetes.io/name: external-dns
    app.kubernetes.io/part-of: otpless
rules:
  - apiGroups: [""]
    resources: ["services", "endpoints", "pods"]
    verbs: ["get", "watch", "list"]
  - apiGroups: ["extensions", "networking.k8s.io"]
    resources: ["ingresses"]
    verbs: ["get", "watch", "list"]
  - apiGroups: [""]
    resources: ["nodes"]
    verbs: ["list", "watch"]

---
# ClusterRoleBinding for ExternalDNS
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: external-dns-viewer
  labels:
    app.kubernetes.io/name: external-dns
    app.kubernetes.io/part-of: otpless
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: external-dns
subjects:
  - kind: ServiceAccount
    name: external-dns
    namespace: otpless-system

---
# ExternalDNS Deployment with HA and security features
apiVersion: apps/v1
kind: Deployment
metadata:
  name: external-dns
  namespace: otpless-system
  labels:
    app.kubernetes.io/name: external-dns
    app.kubernetes.io/part-of: otpless
    app.kubernetes.io/version: "6.20.0"
  annotations:
    monitoring.otpless.com/enabled: "true"
    security.otpless.com/compliance-level: "high"
spec:
  replicas: 2
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: external-dns
  template:
    metadata:
      labels:
        app.kubernetes.io/name: external-dns
        app.kubernetes.io/part-of: otpless
      annotations:
        prometheus.io/scrape: "true"
        prometheus.io/port: "7979"
        prometheus.io/path: "/metrics"
    spec:
      serviceAccountName: external-dns
      securityContext:
        fsGroup: 1001
        runAsUser: 1001
        runAsNonRoot: true
      containers:
        - name: external-dns
          image: bitnami/external-dns:6.20.0
          imagePullPolicy: IfNotPresent
          args:
            - --source=service
            - --source=ingress
            - --provider=aws
            - --policy=upsert-only
            - --registry=txt
            - --txt-owner-id=otpless-eks
            - --aws-zone-type=public
            - --aws-prefer-cname
            - --interval=${DNS_SYNC_INTERVAL}
            - --metrics-address=:7979
            - --log-level=info
            - --log-format=json
            - --domain-filter=${DOMAIN_FILTER}
          env:
            - name: AWS_REGION
              value: ${AWS_REGION}
            - name: AWS_DEFAULT_TTL
              value: "${DNS_RECORD_TTL}"
            - name: POD_NAME
              valueFrom:
                fieldRef:
                  fieldPath: metadata.name
          ports:
            - name: metrics
              containerPort: 7979
              protocol: TCP
          livenessProbe:
            httpGet:
              path: /healthz
              port: 7979
            initialDelaySeconds: 10
            periodSeconds: 10
            timeoutSeconds: 5
          readinessProbe:
            httpGet:
              path: /readyz
              port: 7979
            initialDelaySeconds: 5
            periodSeconds: 10
            timeoutSeconds: 5
          resources:
            limits:
              cpu: "200m"
              memory: "500Mi"
            requests:
              cpu: "100m"
              memory: "250Mi"
          securityContext:
            readOnlyRootFilesystem: true
            allowPrivilegeEscalation: false
            capabilities:
              drop:
                - ALL
      affinity:
        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
            - weight: 100
              podAffinityTerm:
                labelSelector:
                  matchExpressions:
                    - key: app.kubernetes.io/name
                      operator: In
                      values:
                        - external-dns
                topologyKey: kubernetes.io/hostname
      tolerations:
        - key: "node-role.kubernetes.io/master"
          effect: NoSchedule
          operator: Exists
      terminationGracePeriodSeconds: 30