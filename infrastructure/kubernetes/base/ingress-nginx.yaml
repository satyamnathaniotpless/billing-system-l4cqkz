# NGINX Ingress Controller Manifest v1.8.1
# Purpose: Deploys and configures NGINX Ingress Controller with enhanced security and high availability
# Dependencies: 
# - ingress-nginx chart v1.8.1
# - cert-manager for TLS certificate management
# - otpless-system namespace

apiVersion: v1
kind: List
items:
  # ServiceAccount for NGINX Ingress Controller
  - apiVersion: v1
    kind: ServiceAccount
    metadata:
      name: ingress-nginx-controller
      namespace: otpless-system
      labels:
        app.kubernetes.io/name: ingress-nginx
        app.kubernetes.io/part-of: otpless
        app.kubernetes.io/version: "1.8.1"

  # ConfigMap for NGINX configuration
  - apiVersion: v1
    kind: ConfigMap
    metadata:
      name: ingress-nginx-controller
      namespace: otpless-system
      labels:
        app.kubernetes.io/name: ingress-nginx
        app.kubernetes.io/part-of: otpless
    data:
      # Enhanced security headers
      proxy-body-size: "10m"
      proxy-connect-timeout: "10"
      proxy-read-timeout: "120"
      proxy-send-timeout: "120"
      ssl-protocols: "TLSv1.2 TLSv1.3"
      ssl-ciphers: "ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-GCM-SHA384:DHE-RSA-AES128-GCM-SHA256:DHE-RSA-AES256-GCM-SHA384"
      ssl-session-tickets: "false"
      ssl-session-timeout: "10m"
      use-proxy-protocol: "true"
      enable-real-ip: "true"
      client-header-timeout: "60"
      client-body-timeout: "60"
      keep-alive-requests: "100"
      keep-alive: "75"
      server-tokens: "false"
      ssl-redirect: "true"
      hsts: "true"
      hsts-include-subdomains: "true"
      hsts-max-age: "31536000"

  # Deployment for NGINX Ingress Controller
  - apiVersion: apps/v1
    kind: Deployment
    metadata:
      name: ingress-nginx-controller
      namespace: otpless-system
      labels:
        app.kubernetes.io/name: ingress-nginx
        app.kubernetes.io/part-of: otpless
        app.kubernetes.io/version: "1.8.1"
    spec:
      replicas: 2
      selector:
        matchLabels:
          app.kubernetes.io/name: ingress-nginx
          app.kubernetes.io/part-of: otpless
      strategy:
        type: RollingUpdate
        rollingUpdate:
          maxSurge: 1
          maxUnavailable: 0
      template:
        metadata:
          labels:
            app.kubernetes.io/name: ingress-nginx
            app.kubernetes.io/part-of: otpless
          annotations:
            prometheus.io/port: "10254"
            prometheus.io/scrape: "true"
            prometheus.io/scheme: "http"
        spec:
          serviceAccountName: ingress-nginx-controller
          securityContext:
            runAsUser: 101
            runAsGroup: 101
            fsGroup: 101
          containers:
            - name: controller
              image: registry.k8s.io/ingress-nginx/controller:v1.8.1
              imagePullPolicy: IfNotPresent
              args:
                - /nginx-ingress-controller
                - --publish-service=$(POD_NAMESPACE)/ingress-nginx-controller
                - --election-id=ingress-controller-leader
                - --controller-class=k8s.io/ingress-nginx
                - --configmap=$(POD_NAMESPACE)/ingress-nginx-controller
                - --default-ssl-certificate=$(POD_NAMESPACE)/otpless-tls
                - --enable-ssl-passthrough
                - --enable-real-ip
                - --metrics-per-host=true
                - --annotations-prefix=nginx.ingress.kubernetes.io
              env:
                - name: POD_NAME
                  valueFrom:
                    fieldRef:
                      fieldPath: metadata.name
                - name: POD_NAMESPACE
                  valueFrom:
                    fieldRef:
                      fieldPath: metadata.namespace
              ports:
                - name: http
                  containerPort: 80
                  protocol: TCP
                - name: https
                  containerPort: 443
                  protocol: TCP
                - name: metrics
                  containerPort: 10254
                  protocol: TCP
              resources:
                requests:
                  cpu: 100m
                  memory: 256Mi
                limits:
                  cpu: 500m
                  memory: 512Mi
              livenessProbe:
                httpGet:
                  path: /healthz
                  port: 10254
                  scheme: HTTP
                initialDelaySeconds: 10
                periodSeconds: 10
                timeoutSeconds: 5
                successThreshold: 1
                failureThreshold: 3
              readinessProbe:
                httpGet:
                  path: /healthz
                  port: 10254
                  scheme: HTTP
                initialDelaySeconds: 10
                periodSeconds: 10
                timeoutSeconds: 5
                successThreshold: 1
                failureThreshold: 3
              securityContext:
                allowPrivilegeEscalation: false
                capabilities:
                  drop:
                    - ALL
                  add:
                    - NET_BIND_SERVICE
                runAsNonRoot: true

  # Service for NGINX Ingress Controller
  - apiVersion: v1
    kind: Service
    metadata:
      name: ingress-nginx-controller
      namespace: otpless-system
      labels:
        app.kubernetes.io/name: ingress-nginx
        app.kubernetes.io/part-of: otpless
      annotations:
        service.beta.kubernetes.io/aws-load-balancer-type: "nlb"
        service.beta.kubernetes.io/aws-load-balancer-cross-zone-load-balancing-enabled: "true"
        service.beta.kubernetes.io/aws-load-balancer-backend-protocol: "http"
        service.beta.kubernetes.io/aws-load-balancer-ssl-ports: "443"
        service.beta.kubernetes.io/aws-load-balancer-connection-idle-timeout: "60"
        service.beta.kubernetes.io/aws-load-balancer-healthcheck-protocol: "http"
        service.beta.kubernetes.io/aws-load-balancer-healthcheck-path: "/healthz"
        service.beta.kubernetes.io/aws-load-balancer-healthcheck-port: "10254"
        service.beta.kubernetes.io/aws-load-balancer-proxy-protocol: "*"
    spec:
      type: LoadBalancer
      externalTrafficPolicy: Local
      ports:
        - name: http
          port: 80
          targetPort: http
          protocol: TCP
        - name: https
          port: 443
          targetPort: https
          protocol: TCP
        - name: metrics
          port: 10254
          targetPort: metrics
          protocol: TCP
      selector:
        app.kubernetes.io/name: ingress-nginx
        app.kubernetes.io/part-of: otpless